/*
 * syscon.h
 *
 *  Created on: 11 mar 2023
 *      Author: Ludo
 */

#ifndef __SYSCON_H__
#define __SYSCON_H__

#include "anactrl.h"
#include "flash.h"
#include "pmc.h"

/*** SYSCON macros ***/

#define SYSCON_32K_OSC_FREQUENCY_HZ		32768

/*** SYSCON structures ***/

typedef enum {
	SYSCON_SUCCESS = 0,
	SYSCON_ERROR_MAIN_CLOCK_A_SOURCE,
	SYSCON_ERROR_MAIN_CLOCK_B_SOURCE,
	SYSCON_ERROR_CLKOUT_SOURCE,
	SYSCON_ERROR_CLKOUT_DIVIDER,
	SYSCON_ERROR_SYSTEM_FREQUENCY_OVERFLOW,
	SYSCON_ERROR_32K_OSC_TIMEOUT,
	SYSCON_ERROR_CLK_IN_TIMEOUT,
	SYSCON_ERROR_PLL1_LOCK_TIMEOUT,
	SYSCON_ERROR_PERIPHERAL,
	SYSCON_ERROR_BASE_PMC = 0x0100,
	SYSCON_ERROR_BASE_ANACTRL = (SYSCON_ERROR_BASE_PMC + PMC_ERROR_BASE_LAST),
	SYSCON_ERROR_BASE_FLASH = (SYSCON_ERROR_BASE_ANACTRL + ANACTRL_ERROR_BASE_LAST),
	SYSCON_ERROR_BASE_LAST = (SYSCON_ERROR_BASE_FLASH + FLASH_ERROR_BASE_LAST)
} SYSCON_status_t;

typedef enum {
	SYSCON_PERIPHERAL_ROM = 0,
	SYSCON_PERIPHERAL_SRAM_CTRL1,
	SYSCON_PERIPHERAL_SRAM_CTRL2,
	SYSCON_PERIPHERAL_SRAM_CTRL3,
	SYSCON_PERIPHERAL_SRAM_CTRL4,
	SYSCON_PERIPHERAL_FLASH,
	SYSCON_PERIPHERAL_FMC,
	SYSCON_PERIPHERAL_MUX,
	SYSCON_PERIPHERAL_IOCON,
	SYSCON_PERIPHERAL_GPIO0,
	SYSCON_PERIPHERAL_GPIO1,
	SYSCON_PERIPHERAL_GPIO2,
	SYSCON_PERIPHERAL_GPIO3,
	SYSCON_PERIPHERAL_PINT,
	SYSCON_PERIPHERAL_GINT,
	SYSCON_PERIPHERAL_DMA0,
	SYSCON_PERIPHERAL_CRCGEN,
	SYSCON_PERIPHERAL_WWDT,
	SYSCON_PERIPHERAL_RTC,
	SYSCON_PERIPHERAL_MAILBOX,
	SYSCON_PERIPHERAL_ADC,
	SYSCON_PERIPHERAL_MRT,
	SYSCON_PERIPHERAL_OSTIMER,
	SYSCON_PERIPHERAL_SCT,
	SYSCON_PERIPHERAL_UTICK,
	SYSCON_PERIPHERAL_FLEXCOMM0,
	SYSCON_PERIPHERAL_FLEXCOMM1,
	SYSCON_PERIPHERAL_FLEXCOMM2,
	SYSCON_PERIPHERAL_FLEXCOMM3,
	SYSCON_PERIPHERAL_FLEXCOMM4,
	SYSCON_PERIPHERAL_FLEXCOMM5,
	SYSCON_PERIPHERAL_FLEXCOMM6,
	SYSCON_PERIPHERAL_FLEXCOMM7,
	SYSCON_PERIPHERAL_TIMER2,
	SYSCON_PERIPHERAL_USB0_DEV,
	SYSCON_PERIPHERAL_TIMER0,
	SYSCON_PERIPHERAL_TIMER1,
	SYSCON_PERIPHERAL_DMA1,
	SYSCON_PERIPHERAL_COMP,
	SYSCON_PERIPHERAL_SDIO,
	SYSCON_PERIPHERAL_USB1_HOST,
	SYSCON_PERIPHERAL_USB1_DEV,
	SYSCON_PERIPHERAL_USB1_RAM,
	SYSCON_PERIPHERAL_USB1_PHY,
	SYSCON_PERIPHERAL_FREQME,
	SYSCON_PERIPHERAL_RNG,
	SYSCON_PERIPHERAL_SYSCTL,
	SYSCON_PERIPHERAL_USB0_HOSTM,
	SYSCON_PERIPHERAL_USB0_HOSTS,
	SYSCON_PERIPHERAL_HASH_AES,
	SYSCON_PERIPHERAL_POWER_QUAD,
	SYSCON_PERIPHERAL_PLULUT,
	SYSCON_PERIPHERAL_TIMER3,
	SYSCON_PERIPHERAL_TIMER4,
	SYSCON_PERIPHERAL_PUF,
	SYSCON_PERIPHERAL_CASPER,
	SYSCON_PERIPHERAL_ANACTRL,
	SYSCON_PERIPHERAL_HS_LSPI,
	SYSCON_PERIPHERAL_GPIO_SEC,
	SYSCON_PERIPHERAL_GPIO_SEC_INT,
	SYSCON_PERIPHERAL_LAST
} SYSCON_peripheral_t;

typedef enum {
	SYSCON_CLKOUT_SOURCE_MAIN = 0,
	SYSCON_CLKOUT_SOURCE_PLL0,
	SYSCON_CLKOUT_SOURCE_CLKIN,
	SYSCON_CLKOUT_SOURCE_FRO96M,
	SYSCON_CLKOUT_SOURCE_FRO1M,
	SYSCON_CLKOUT_SOURCE_PLL1,
	SYSCON_CLKOUT_SOURCE_32K_OSC,
	SYSCON_CLKOUT_SOURCE_LAST
} SYSCON_clkout_source_t;

/*** SYSCON functions ***/

SYSCON_status_t SYSCON_init_clock(void);

SYSCON_status_t SYSCON_enable_peripheral(SYSCON_peripheral_t peripheral);
SYSCON_status_t SYSCON_reset_peripheral(SYSCON_peripheral_t peripheral);

SYSCON_status_t SYSCON_configure_clkout(SYSCON_clkout_source_t source, uint8_t divider);

#define SYSCON_status_check(error_base) { if (syscon_status != SYSCON_SUCCESS) { status = error_base + syscon_status; goto errors; }}
#define SYSCON_error_check() { ERROR_status_check(syscon_status, SYSCON_SUCCESS, ERROR_BASE_SYSCON); }
#define SYSCON_error_check_print() { ERROR_status_check_print(syscon_status, SYSCON_SUCCESS, ERROR_BASE_SYSCON); }

#endif /* __SYSCON_H__ */
